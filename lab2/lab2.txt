bool LinkedList::del(char ch)
{
    /*
    Member function to delete a data point
    */
    bool deleted = false;
    Node *curr = head;
    while (curr && !deleted)
    {
        if (ch == curr->data)
        {
            if (curr->prev)
            {
                curr->prev->next = curr->next;
            }
            else
            {
                head = curr->next;
                if (curr->next)
                {
                    curr->next->prev = nullptr;
                }
            }
            if (curr->next)
            {
                curr->next->prev = curr->prev;
            }
            else
            {
                tail = curr->prev;
                if (curr->prev)
                {
                    curr->prev->next = nullptr;
                }
            }
            delete curr;
            deleted = true;
            --size;
        }
        else
        {
            curr = curr->next;
        }
    }
    return deleted;
}

Displaying the linked list:  x y z 
found y
Displaying the linked list:  x z 
did not find y
Displaying the linked list:  z 
did not find y
Displaying the linked list:  
did not find y
