int height(node *root)
{
    // Recursively computing height of BST
    int max_height = height(root, 0);
    return max_height;
}



int height(node *root, int curr_height)
{
    // Recursively computing height of BST
    int max_height = curr_height;

    if (root->left)
        max_height = max(max_height, height(root->left, curr_height + 1));

    if (root->right)
        max_height = max(max_height, height(root->right, curr_height + 1));

    return max_height;
}



Welcome to the Proficiency Demo!

Inorder traversal: 2  34  41  82  83  88  88  96  98  100  100  101  194  206  213  218  

Level 1: 83
Level 2: 2 and 206
Level 3: 41
Level 4: 34 and 82
Level 3: 194 and 218
Level 4: 88
Level 5: 98
Level 6: 88 and 101
Level 7: 96
Level 7: 100
Level 8: 100
Level 4: 213


This tree contains 16 items 


recursive count: 16
recursive sum: 1744
recursive height: 7


The resulting tree after your function ran is: 
Inorder traversal: 2  34  41  82  83  88  88  96  98  100  100  101  194  206  213  218  

Level 1: 83
Level 2: 2 and 206
Level 3: 41
Level 4: 34 and 82
Level 3: 194 and 218
Level 4: 88
Level 5: 98
Level 6: 88 and 101
Level 7: 96
Level 7: 100
Level 8: 100
Level 4: 213


This tree contains 16 items 
